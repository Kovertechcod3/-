# Autorecon

A Python script to automatically scan websites for information disclosure and vulnerabilities.

## Features

- Extracts and recursively requests links from a target domain in parallel threads
- Checks response headers and content for clues like passwords, debugging code
- Fuzzes common URL parameters to probe for hidden functionality 
- Checks for default files and folders on web servers
- Integrates a vulnerability scanning module to check for SQLi, XSS etc
- Stores results in CSV or JSON format for analysis
- Configurable via JSON file for number of threads, target URL etc
- Prints output verbosely during scanning process

## Usage

1. Install dependencies
   - `pip install -r requirements.txt`

2. Configure script
   - Edit `config.json` with target URL, output format etc

3. Run scanning
   - `python main.py`

4. View results
   - Results will be saved in the format specified in config
   - CSV and JSON are standard output file types

## Install Vulnerability Scanner

This script integrates with a common vulnerability scanning module. Make sure to install the module used:

- `pip install fuzzrequest` # Example vulnerability scanner module

## Improvements

- Add proxy/agent support to avoid bot detection
- Persist results to database for long term analysis
- Blacklist common files that are rarely useful like images
- Auto deploy webshells if flaws found to test exploitability
- Schedule periodic rescan to check for changes over time

## Contributing 

Contributions welcome! Please submit any issues/pull requests.

## License

MIT

Enjoy and stay safe! Let me know if any other questions.

This provides some useful documentation on setting up and using the script, as well as ideas for future improvements to make it more full featured.
